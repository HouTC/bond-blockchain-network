/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.example.mynetwork

//sample participant
participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

participant Issuer identified by issuerId {
  o String issuerId
  o String name
  //o String firstListed
  //o String domicile
  //o String registry
  //o String endofFinancialYear
  //o String bankAccount
  o Double balance
  //o Boolean paymentStatus
}

participant Investor identified by investorId {
  o String investorId
  o String name
  //o String bankAccount
  o Double balance
  //o Boolean receiveStatus
}

participant Regulator identified by regulatorID {
  o String regulatorID
  o String name
}

//sample asset
asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

asset Bond identified by ISIN {
  o String ISIN
  --> Issuer issuer

  //calculate bulk payment
  o Double issueAmount
  o Double interestRate

  //decide the payment date
  //o DateTime issueDate
  //o DateTime firstInterestPaymentDate
  //o String interestPaymentFreq
  //o DateTime maturityDate
  //o DateTime nextPaymentDate

  --> Holding[] holdings
  //o Double minHolding
  //o Double issuePrice
  //o String type
  o Boolean pStatus default = false
}

asset Holding identified by holdingId {
  o String holdingId
  --> Investor owner
  --> Bond bond
  o Double faceValue
}

//sample transaction
transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

//coupon payment process
transaction CouponPayment {
  --> Issuer issuer
  --> Bond bond
}


//bulk payment process
transaction BulkPayment {
  --> Issuer issuer
  --> Bond bond
  o Double coupon
}

//distribute coupon process
transaction DistributeCoupon {
  --> Bond bond
}

//regulator can decline bond, if bond input is wrong
transaction DeclineBond{
  --> Bond bond
}

//sample event
event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}

//bulk payment event
event BulkPaymentMadeEvent {
  o String issuerID
}

//distribute coupon event
event CouponDistributedEvent {
  o String bondISIN
}

//payment made event
event PaymentMadeEvent {
  --> Issuer issuer
}

//payment distributed event
event PaymentDistributedEvent {
  --> Investor investor
}

//payment incorrect amount event
event PaymentIncorrectEvent {
  --> Issuer issuer
}

//creating new dev branch